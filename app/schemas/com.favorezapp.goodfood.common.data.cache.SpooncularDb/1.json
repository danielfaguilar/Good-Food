{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "4c9d0c7cd4962c9fa0cf844ac35bbaaf",
    "entities": [
      {
        "tableName": "cuisine_table",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cuisine` TEXT NOT NULL, PRIMARY KEY(`cuisine`))",
        "fields": [
          {
            "fieldPath": "cuisine",
            "columnName": "cuisine",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "cuisine"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "food_recipe_table",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`foodRecipeId` INTEGER NOT NULL, `aggregateLikes` INTEGER NOT NULL, `author` TEXT NOT NULL, `cheap` INTEGER NOT NULL, `dairyFree` INTEGER NOT NULL, `glutenFree` INTEGER NOT NULL, `image` TEXT NOT NULL, `lowFodmap` INTEGER NOT NULL, `readyInMinutes` INTEGER NOT NULL, `sourceName` TEXT NOT NULL, `sourceUrl` TEXT NOT NULL, `summary` TEXT NOT NULL, `title` TEXT NOT NULL, `vegan` INTEGER NOT NULL, `vegetarian` INTEGER NOT NULL, `veryHealthy` INTEGER NOT NULL, PRIMARY KEY(`foodRecipeId`))",
        "fields": [
          {
            "fieldPath": "foodRecipeId",
            "columnName": "foodRecipeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "aggregateLikes",
            "columnName": "aggregateLikes",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "author",
            "columnName": "author",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "cheap",
            "columnName": "cheap",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dairyFree",
            "columnName": "dairyFree",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "glutenFree",
            "columnName": "glutenFree",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "image",
            "columnName": "image",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lowFodmap",
            "columnName": "lowFodmap",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "readyInMinutes",
            "columnName": "readyInMinutes",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sourceName",
            "columnName": "sourceName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "sourceUrl",
            "columnName": "sourceUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "summary",
            "columnName": "summary",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "vegan",
            "columnName": "vegan",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "vegetarian",
            "columnName": "vegetarian",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "veryHealthy",
            "columnName": "veryHealthy",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "foodRecipeId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "extended_ingredient_table",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`ingredientId` INTEGER NOT NULL, `amount` REAL NOT NULL, `consistency` TEXT NOT NULL, `image` TEXT NOT NULL, `name` TEXT NOT NULL, `original` TEXT NOT NULL, `unit` TEXT NOT NULL, PRIMARY KEY(`ingredientId`))",
        "fields": [
          {
            "fieldPath": "ingredientId",
            "columnName": "ingredientId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "consistency",
            "columnName": "consistency",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "image",
            "columnName": "image",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "original",
            "columnName": "original",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "unit",
            "columnName": "unit",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "ingredientId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "CachedRecipeIngredientCrossRef",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`foodRecipeId` INTEGER NOT NULL, `ingredientId` INTEGER NOT NULL, PRIMARY KEY(`foodRecipeId`, `ingredientId`))",
        "fields": [
          {
            "fieldPath": "foodRecipeId",
            "columnName": "foodRecipeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ingredientId",
            "columnName": "ingredientId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "foodRecipeId",
            "ingredientId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_CachedRecipeIngredientCrossRef_ingredientId",
            "unique": false,
            "columnNames": [
              "ingredientId"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CachedRecipeIngredientCrossRef_ingredientId` ON `${TABLE_NAME}` (`ingredientId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "CachedFoodRecipeCuisineCrossRef",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`foodRecipeId` INTEGER NOT NULL, `cuisine` TEXT NOT NULL, PRIMARY KEY(`foodRecipeId`, `cuisine`))",
        "fields": [
          {
            "fieldPath": "foodRecipeId",
            "columnName": "foodRecipeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cuisine",
            "columnName": "cuisine",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "foodRecipeId",
            "cuisine"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_CachedFoodRecipeCuisineCrossRef_cuisine",
            "unique": false,
            "columnNames": [
              "cuisine"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CachedFoodRecipeCuisineCrossRef_cuisine` ON `${TABLE_NAME}` (`cuisine`)"
          }
        ],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '4c9d0c7cd4962c9fa0cf844ac35bbaaf')"
    ]
  }
}